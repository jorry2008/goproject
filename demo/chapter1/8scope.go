package chapter1

import "fmt"

// 作用域为已声明标识符所表示的常量、类型、变量、函数或包在源代码中的作用范围（作用域不是访问控制，不要与首字母大小写的公有私有混淆）
// 作用域，在常量、类型、变量、函数、包，在声明时所在的位置就已经决定了

// Go 语言中变量可以在三个地方声明：
// 函数内定义的变量称为局部变量（全局变量声明，可不用）
// 函数外定义的变量称为全局变量（局部变量声明，必须用）
// 函数定义中的变量称为形式参数（就是定义函数的时候，参数的位置，形式参数会被函数当成局部变量使用）

// 声明全局变量，整个文件中都可以直接访问到此变量
var g int = 20

func Example8() {
	// 声明局部变量，只在函数体内可直接访问（局部变量声明了必须要使用）
	//var a, b int

	// 声明局部变量，且与全局变量同名，在函数体内优化使用局部变量（就近原则）
	var g int = 10

	fmt.Printf("同名变量，优化取局部变量值： g = %d\n", g)
}

// 形式参数 a 和 b 会作为函数的局部变量来使用
func sum(a, b int) int {
	fmt.Printf("sum() 函数中 a = %d\n\n", a)
	fmt.Printf("sum() 函数中 b = %d\n", b)

	return a + b
}

// 重点：作用域，和访问控制，不同
